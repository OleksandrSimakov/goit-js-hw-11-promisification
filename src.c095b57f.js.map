{"version":3,"sources":["index.js"],"names":["delay","ms","Promise","resolve","setTimeout","logger","time","console","log","then","users","name","active","toggleUserState","allUsers","userName","updatedUsers","map","user","logger2","table","randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","reject","delay2","id","logSuccess","logError","warn","amount","catch"],"mappings":";;;AAsGA,aAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAtGA,QAAA,gBAIA,IAAMA,EAAQ,SAAAC,GACH,OAAA,IAAIC,QAAQ,SAACC,GAChBC,WAAW,WACPD,EAAQF,IACTA,MAGLI,EAAS,SAAAC,GAAQC,OAAAA,QAAQC,IAAsBF,kBAAAA,OAAAA,EAAlC,QAGnBN,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,MAAMS,KAAKJ,GAIjB,IAAMK,EAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGnBC,EAAkB,SAACC,EAAUC,GACzBC,IAAAA,EAAeF,EAASG,IAAI,SAAAC,GAC9BA,OAAAA,EAAKP,OAASI,EAAgBG,EAAAA,EAAAA,GAAAA,GAA9B,GAAA,CAAoCN,QAASM,EAAKN,SAAWM,IAE1D,OAAA,IAAIhB,QAAQ,SAACC,GAChBA,EAAQa,MAIVG,EAAU,SAAAH,GAAgBT,OAAAA,QAAQa,MAAMJ,IAW9CH,EAAgBH,EAAO,SAASD,KAAKU,GACrCN,EAAgBH,EAAO,OAAOD,KAAKU,GAInC,IAAME,EAA4B,SAACC,EAAKC,GAC/BC,OAAAA,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAGhDK,EAAkB,SAAAC,GAEf,OAAA,IAAI1B,QAAQ,SAACC,EAAS0B,GACrBC,IAAAA,EAAST,EAA0B,IAAK,KAE1CjB,WAAW,WACYoB,KAAKE,SAAW,GAEjCvB,EAAQ,CAACyB,EAAYG,GAAID,IAEvBD,EAAOD,EAAYG,KAExBD,MAILE,EAAa,SAAAD,GACjBxB,QAAQC,IAAmBuB,eAAAA,OAAAA,EAAG,GAAmBA,kBAAAA,OAAAA,EAAG,GAApD,QAGIE,EAAW,SAAAF,GACfxB,QAAQ2B,KAAqCH,gCAAAA,OAAAA,EAA7C,+BAaFJ,EAAgB,CAAEI,GAAI,GAAII,OAAQ,MAC/B1B,KAAKuB,GACLI,MAAMH,GAETN,EAAgB,CAAEI,GAAI,GAAII,OAAQ,MAC/B1B,KAAKuB,GACLI,MAAMH,GAETN,EAAgB,CAAEI,GAAI,GAAII,OAAQ,KAC/B1B,KAAKuB,GACLI,MAAMH,GAETN,EAAgB,CAAEI,GAAI,GAAII,OAAQ,MAC/B1B,KAAKuB,GACLI,MAAMH","file":"src.c095b57f.js","sourceRoot":"../src","sourcesContent":["import './styles.css';\n\n\n// задание 1\nconst delay = ms => {\n    return new Promise((resolve) => {\n        setTimeout(() => {\n            resolve(ms);\n        }, ms)\n    })\n};\nconst logger = time => console.log(`Resolved after ${time}ms`);\n\n// Вызовы функции для проверки\ndelay(2000).then(logger); // Resolved after 2000ms\ndelay(1000).then(logger); // Resolved after 1000ms\ndelay(1500).then(logger); // Resolved after 1500ms\n\n\n// задание 2\nconst users = [\n  { name: 'Mango', active: true },\n  { name: 'Poly', active: false },\n  { name: 'Ajax', active: true },\n  { name: 'Lux', active: false },\n];\n\nconst toggleUserState = (allUsers, userName) => {\n    const updatedUsers = allUsers.map(user =>\n        user.name === userName ? { ...user, active: !user.active } : user,\n    );\n    return new Promise((resolve) => {\n        resolve(updatedUsers)\n    })\n};\n\nconst logger2 = updatedUsers => console.table(updatedUsers);\n\n/*\n * Сейчас работает так\n */\n// toggleUserState(users, 'Mango', logger2);\n// toggleUserState(users, 'Lux', logger2);\n\n/*\n * Должно работать так\n */\ntoggleUserState(users, 'Mango').then(logger2);\ntoggleUserState(users, 'Lux').then(logger2);\n\n\n// задание 3\nconst randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = transaction => {\n    \n  return new Promise((resolve, reject) => {\n    const delay2 = randomIntegerFromInterval(200, 500);\n\n        setTimeout(() => {\n            const canProcess = Math.random() > 0.3;\n            if (canProcess) {\n              resolve([transaction.id, delay2]);\n            } else {\n                reject(transaction.id);\n            }\n        }, delay2);\n    })\n};\n\nconst logSuccess = id => {\n  console.log(`Transaction ${id[0]} processed in ${id[1]}ms`);\n};\n\nconst logError = id => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\n/*\n * Работает так\n */\n// makeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\n// makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\n// makeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\n// makeTransaction({ id: 73, amount: 100 }, logSuccess, logError);\n/*\n * Должно работать так\n */\nmakeTransaction({ id: 70, amount: 150 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 })\n  .then(logSuccess)\n  .catch(logError);"]}